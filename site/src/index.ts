interface IsolinePath {
  class: string;
  path: string;
  fill: string;
}

interface IsolineSVG {
  paths: [IsolinePath];
  view_box: string;
}

function isoline_to_svg(isoline: IsolineSVG): SVGSVGElement {
  let svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
  svg.setAttribute("viewBox", isoline.view_box);
  svg.setAttribute("width", "100%");
  svg.setAttribute("height", "100%");
  isoline.paths.forEach((path) => {
    let svg_path = document.createElementNS(
      "http://www.w3.org/2000/svg",
      "path"
    );
    svg_path.setAttribute("d", path.path);
    svg_path.setAttribute("fill", path.fill);
    svg_path.setAttribute("class", path.class);
    svg_path.setAttribute("stroke", "black");
    svg_path.setAttribute("stroke-width", "0.1");
    svg.appendChild(svg_path);
  });

  return svg;
}

import("contour").then((wasm) => {
  console.log("Contour loaded!");
  const isoline: IsolineSVG = wasm.isoline(
    new Int32Array([
      1,
      2,
      3,
      4,
      4,
      3,
      2,
      1,
      1,
      2,
      3,
      4,
      4,
      3,
      2,
      1,
      2,
      3,
      4,
      5,
      5,
      4,
      3,
      2,
      2,
      3,
      4,
      5,
      5,
      4,
      3,
      2,
      3,
      4,
      5,
      6,
      6,
      5,
      4,
      3,
      3,
      4,
      5,
      6,
      6,
      5,
      4,
      3,
      4,
      5,
      6,
      8,
      8,
      6,
      5,
      4,
      4,
      5,
      6,
      8,
      8,
      6,
      5,
      4,
      4,
      5,
      6,
      8,
      8,
      6,
      5,
      4,
      4,
      5,
      6,
      8,
      8,
      6,
      5,
      4,
      3,
      4,
      5,
      6,
      6,
      5,
      4,
      3,
      3,
      4,
      5,
      6,
      6,
      5,
      4,
      3,
      2,
      3,
      4,
      5,
      5,
      4,
      3,
      2,
      2,
      3,
      4,
      5,
      5,
      4,
      3,
      2,
      1,
      2,
      3,
      4,
      4,
      3,
      2,
      1,
      1,
      2,
      3,
      4,
      4,
      3,
      2,
      1,
      1,
      2,
      3,
      4,
      4,
      3,
      2,
      1,
      1,
      2,
      3,
      4,
      4,
      3,
      2,
      1,
      2,
      3,
      4,
      5,
      5,
      4,
      3,
      2,
      2,
      3,
      4,
      5,
      5,
      4,
      3,
      2,
      3,
      4,
      5,
      6,
      6,
      5,
      4,
      3,
      3,
      4,
      5,
      6,
      6,
      5,
      4,
      3,
      4,
      5,
      6,
      8,
      8,
      6,
      5,
      4,
      4,
      5,
      6,
      8,
      8,
      6,
      5,
      4,
      4,
      5,
      6,
      8,
      8,
      6,
      5,
      4,
      4,
      5,
      6,
      8,
      8,
      6,
      5,
      4,
      3,
      4,
      5,
      6,
      6,
      5,
      4,
      3,
      3,
      4,
      5,
      6,
      6,
      5,
      4,
      3,
      2,
      3,
      4,
      5,
      5,
      4,
      3,
      2,
      2,
      3,
      4,
      5,
      5,
      4,
      3,
      2,
      1,
      2,
      3,
      4,
      4,
      3,
      2,
      1,
      1,
      2,
      3,
      4,
      4,
      3,
      2,
      1,
    ]),
    16,
    16,
    new Int32Array([3, 4, 5, 6, 7])
  );

  const anchor = document.getElementById("svg");

  anchor.appendChild(isoline_to_svg(isoline));

  console.log(isoline);
});
